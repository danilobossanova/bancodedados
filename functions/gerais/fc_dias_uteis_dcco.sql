CREATE OR REPLACE FUNCTION SANKHYA.FC_DIAS_UTEIS_DCCO (
    DATAINICIAL IN DATE,
    DATAFINAL IN DATE,
    P_CODVEND IN NUMBER
)
RETURN INT
IS
    PRESULT INT;
    PPAIS INT;
    PESTADO INT;
    PCIDADE INT;
    PCODEMP INT;
    PDATAREC DATE;
    PCODFUNC INT;
    PQTD INT;
    PDATA DATE;
    PDIASNAOUTEIS INT;
    PDATAINI DATE;
    PDATAFIM DATE;
    PDIA INT;
    PMES INT;
    PDATAI DATE;
    PDATAF DATE;

    /**********************************************************************************************
    @Author: Danilo Fernando <danilo.bossanova@hotmail.com>
    @Description: Retorna os dias uteis para uma determinada empresa.
    ***********************************************************************************************/


BEGIN
    IF DATAINICIAL IS NULL OR DATAFINAL IS NULL THEN
        RETURN 0;
    END IF;

    PDATAINI := TRUNC(DATAINICIAL);
    PDATAFIM := TRUNC(DATAFINAL);

    IF PDATAINI > PDATAFIM THEN
        RETURN 0;
    END IF;

    PDIASNAOUTEIS := 0;
    PQTD := 0;

    -- CALCULANDO OS SÁBADOS E DOMINGOS
    PDATA := PDATAINI;

    WHILE PDATA <= PDATAFIM LOOP
        -- 1-DOMINGO  7-SÁBADO
        IF TO_NUMBER(TO_CHAR(PDATA, 'D')) IN (1, 7) THEN
            PQTD := PQTD + 1;
        END IF;

        PDATA := PDATA + 1;
    END LOOP;

    PDIASNAOUTEIS := PQTD;
    PCODEMP := 1;
    PCIDADE := -1;

    IF (P_CODVEND > 0) THEN
        SELECT NVL(CODFUNC, -1), NVL(CODEMP, -1)
        INTO PCODFUNC, PCODEMP
        FROM TGFVEN
        WHERE CODVEND = P_CODVEND;

        IF (PCODFUNC > -1) THEN   
            SELECT UFS.CODUF, UFS.CODPAIS, CID.CODCID
            INTO PESTADO, PPAIS, PCIDADE
            FROM TSIUFS UFS, TSICID CID, TFPFUN FUN
            WHERE FUN.CODFUNC = PCODFUNC AND FUN.CODCIDTRAB = CID.CODCID AND CID.UF = UFS.CODUF 
            --AND FUN.DTDEM IS NULL 
            AND FUN.CODEMP = PCODEMP;      
        END IF;
    END IF;

    IF (PCIDADE = -1) THEN
        -- SE A CIDADE AINDA NÃO FOI RESOLVIDA, BUSCAR A CIDADE DA EMPRESA
        SELECT UFS.CODUF, UFS.CODPAIS, CID.CODCID
        INTO PESTADO, PPAIS, PCIDADE
        FROM TSIUFS UFS, TSICID CID, TSIEMP EMP
        WHERE EMP.CODEMP = PCODEMP AND EMP.CODCID = CID.CODCID AND CID.UF = UFS.CODUF;
    END IF;

    -- CONTANDO OS FERIADOS NÃO RECORRENTES
    SELECT COUNT(1)
    INTO PQTD
    FROM TSIFER
    WHERE DTFERIADO BETWEEN PDATAINI AND PDATAFIM
    AND RECORRENTE = 'N'
    AND (CODPAIS = PPAIS OR CODUF = PESTADO OR CODCID = PCIDADE OR NACIONAL = 'I')
    AND NOT TO_NUMBER(TO_CHAR(DTFERIADO, 'D')) IN (1, 7); -- 1-DOMINGO  7-SÁBADO

    PDIASNAOUTEIS := PDIASNAOUTEIS + PQTD;
   
    -- OBTENDO DATA INICIAL (RETIRANDO 29/02)
    PDATAI := PDATAINI;
   
    PDIA := TO_NUMBER(TO_CHAR(PDATAINI, 'DD'));
    PMES := TO_NUMBER(TO_CHAR(PDATAINI, 'MM'));
   
    IF PMES = 2 AND PDIA = 29 THEN
        PDIA := 01;
        PMES := 03;
    END IF;

    PDATAINI := TO_DATE('1900' || '-' || TO_CHAR(PMES) || '-' || TO_CHAR(PDIA), 'YYYY-MM-DD');
   
    -- OBTENDO DATA FINAL (RETIRANDO 29/02)
    PDATAF := PDATAFIM;
   
    PDIA := TO_NUMBER(TO_CHAR(PDATAFIM, 'DD'));
    PMES := TO_NUMBER(TO_CHAR(PDATAFIM, 'MM'));
   
    IF PMES = 2 AND PDIA = 29 THEN
        PDIA := 01;
        PMES := 03;
    END IF;

    PDATAFIM := TO_DATE('1900' || '-' || TO_CHAR(PMES) || '-' || TO_CHAR(PDIA), 'YYYY-MM-DD');

    -- CONTANDO OS FERIADOS RECORRENTES
    SELECT COUNT(1)
    INTO PQTD
    FROM TSIFER
    WHERE ((PDATAINI <= PDATAFIM AND DTFERIADO BETWEEN PDATAINI AND PDATAFIM)
           OR (PDATAINI > PDATAFIM AND (DTFERIADO BETWEEN PDATAINI AND TO_DATE('1900-12-31', 'YYYY-MM-DD') OR DTFERIADO BETWEEN TO_DATE('1900-01-01', 'YYYY-MM-DD') AND PDATAFIM)))
    AND RECORRENTE = 'S'
    AND (CODPAIS = PPAIS OR CODUF = PESTADO OR CODCID = PCIDADE OR NACIONAL = 'I')
    AND NOT TO_NUMBER(TO_CHAR(TO_DATE(TO_CHAR(SYSDATE, 'YYYY') || '-' || TO_CHAR(DTFERIADO, 'MM') || '-' || TO_CHAR(DTFERIADO, 'DD'), 'YYYY-MM-DD'), 'D')) IN (1, 7); -- 1-DOMINGO  7-SÁBADO

    PDIASNAOUTEIS := PDIASNAOUTEIS + PQTD;
    PRESULT := NVL(PDATAF - PDATAI, 0) - NVL(PDIASNAOUTEIS, 0) + 1;

    IF PRESULT < 0 THEN
        PRESULT := 0;
    END IF;

    RETURN NVL(PRESULT, 0);
END;
