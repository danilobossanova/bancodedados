CREATE OR REPLACE PACKAGE SANKHYA.PKG_FATURAMENTOAUTOMATICO AS

    /* Variáveis globais para armazenar as configurações do Faturamento*/
    G_NUFAT                 NUMBER(10);
    G_CODEMP                NUMBER(10);
    G_ATIVO                 VARCHAR2(10 BYTE);
    G_SERIE                 NUMBER(10);
    G_SITUACAOWMS           NUMBER(10);
    G_DTHRULTFATURAMENTO    FLOAT(126);
    G_RELATORIOERRO         VARCHAR2(10 BYTE);
    G_RELATORIOFATURAMENTO  VARCHAR2(10 BYTE);
    G_GRUPOEMAIL            VARCHAR2(100 BYTE);
    
    G_TOPDESTINO            TGFCAB.CODTIPOPER%TYPE;
    
    /* Variaveis globais com dados da NUNOTA da CAB */
    P_CODEMP_DA_CAB         TGFCAB.CODEMP%TYPE;
    P_CODTIPVENDA_DA_CAB    TGFCAB.CODTIPVENDA%TYPE;
    P_CODTIPOPER_DA_CAB     TGFCAB.CODTIPOPER%TYPE;
    P_CODPARC_DA_CAB        TGFCAB.CODPARC%TYPE;
    P_VALORNOTA_DA_CAB      TGFCAB.VLRNOTA%TYPE;
    P_CODUSU_DA_CAB         TGFCAB.CODUSU%TYPE;
    P_CODUSUINC_DA_CAB      TGFCAB.CODUSUINC%TYPE;

    /* Carrega as configurações mais recentes para um CODEMP específico */
    PROCEDURE CARREGA_CONFIG_FATAUT(P_CODEMP IN NUMBER);

    /* BUSCA DADOS DA NUNOTA */
    PROCEDURE GET_DADOS_NUNOTA(P_NUNOTA    IN TGFCAB.NUNOTA%TYPE);

    /* RETORNA O CODIGO DA EMPRESA */
    FUNCTION GET_CODEMP_NUNOTA(
        P_NUNOTA    IN NUMBER
    ) RETURN NUMBER;
    
    /*  Retorna a Top usada na CAB */
    FUNCTION GET_TOP_NUNOTA(
        P_NUNOTA    IN NUMBER
    ) RETURN NUMBER;

    /* Retona o tipo de Negociacao na CAB */
    FUNCTION GET_TIPONEGOCIACAO_NUNOTA(
        P_NUNOTA IN NUMBER
    ) RETURN NUMBER;

    /* Insere o log de faturamento  */
    FUNCTION INSERE_LOGFATAUTO(
        p_nunota   IN NUMBER,
        p_numnota  IN NUMBER,
        p_log      IN CLOB,
        p_dhalter  IN DATE
    ) RETURN BOOLEAN;
    
    /* ATUALIZA A HORA DO ULTIMO FATURAMENTO AUTOMATICO */
    PROCEDURE ATUALIZA_DHFATAUTDCCO (
        P_NUFAT                IN NUMBER,
        P_CODEMP               IN NUMBER,
        P_SITUACAOWMS          IN NUMBER,
        P_DTHRULTFATURAMENTO   IN FLOAT
    );
    
    /* vERIFICA SE O TIPO DE NEGOCIACAO DEVE SER FATURADO */
    PROCEDURE CONSULTA_TIPNEGOFATDCCO (
        P_CODTIPNEG      IN NUMBER,
        P_CODEMP         IN NUMBER,
        P_RESULTADO      OUT BOOLEAN
    );
    
    /*  vERIFICA SE O TIPO DE NEGOCIACAO A VISTA DEVE SER FATURADO */
    PROCEDURE CONSULTA_TIPNEGOFATAVISTADCCO (
        P_CODTIPNEG      IN NUMBER,
        P_CODEMP         IN NUMBER,
        P_RESULTADO      OUT BOOLEAN
    );
    
    
    /*  VERIFICA SE A TOP DO PEDIDO DEVE SER FATURADA */
    PROCEDURE CONSULTA_TOPPEDFATAUT (
        P_TOP           IN NUMBER,
        P_CODEMP        IN NUMBER,
        P_RESULTADO OUT BOOLEAN
    );

    PROCEDURE FATURAPELOESTOQUE(
        P_NUNOTA    IN NUMBER,
        P_RESULTADO OUT BOOLEAN
    );

    PROCEDURE CLIENTE_TEM_LIMITE_CREDITO(
        P_CODPAR        IN NUMBER,
        P_VLRCOMPRA     IN NUMBER,
        P_STATUS        OUT BOOLEAN
    );

    /* Solicitacao de liberação - Venda a Vista --- Evento 1001  */
     PROCEDURE LANCAR_LIBERACAO(
        P_NUCHAVE       IN NUMBER,
        P_VLRATUAL      IN FLOAT,
        P_CODUSUSOLICIT IN NUMBER
    );
    
    PROCEDURE TEM_LIBERACAO(
        P_NUCHAVE   IN NUMBER,
        P_STATUS    OUT BOOLEAN
    );    


END PKG_FATURAMENTOAUTOMATICO;
/
